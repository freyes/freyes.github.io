<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>TTY.cl</title><link>http://tty.cl/</link><description>Random thoughts and knowledge</description><lastBuildDate>Sun, 14 Aug 2016 00:00:00 -0400</lastBuildDate><item><title>Lynx: accept cookies always</title><link>http://tty.cl/lynx-accept-cookies-always.html</link><description>&lt;p&gt;From time to time I need to use &lt;a href="https://packages.ubuntu.com/lynx"&gt;lynx&lt;/a&gt; (or
any other text based browser like &lt;a href="https://packages.ubuntu.com/links"&gt;links&lt;/a&gt;),
for some reason my fingers usually type &lt;code&gt;lynx&lt;/code&gt;, but having to accept cookies
every time a new domain tries to send it to me it's annoying, so here is how
you configure it to always accept them.&lt;/p&gt;
&lt;p&gt;Add this to your &lt;code&gt;~/.bashrc&lt;/code&gt; file:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;LYNX_CFG=~/.lynx.cfg
export LYNX_CFG
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then in &lt;code&gt;~/.lynx.cfg&lt;/code&gt;:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;INCLUDE:/etc/lynx-cur/lynx.cfg
FORCE_SSL_COOKIES_SECURE:TRUE
SET_COOKIES:TRUE
ACCEPT_ALL_COOKIES:TRUE
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And voila!&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Felipe Reyes</dc:creator><pubDate>Sun, 14 Aug 2016 00:00:00 -0400</pubDate><guid isPermaLink="false">tag:tty.cl,2016-08-14:lynx-accept-cookies-always.html</guid></item><item><title>Multiple Local Environments with Juju</title><link>http://tty.cl/multiple-local-environments-with-juju.html</link><description>&lt;p&gt;&lt;img alt="juju man" src="/images/JuJu-man.png" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://juju.ubuntu.com/"&gt;Juju&lt;/a&gt; has the ability to use lxc or kvm to deploy
services, this is done by the
&lt;a href="https://juju.ubuntu.com/docs/config-local.html"&gt;local provider&lt;/a&gt;, but
sometimes during development you may want to have one environment up-n-running
all the time for testing and you may need another one to run
&lt;a href="https://juju.ubuntu.com/docs/tools-amulet.html"&gt;amulet&lt;/a&gt; tests, well at the
beginning this wasn't obvious to me that this could be achieved, but then I
found how to do it :)&lt;/p&gt;
&lt;p&gt;Here is how you can have two different environments:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;environments&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;local&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;local&lt;/span&gt;
    &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;series&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;trusty&lt;/span&gt;
    &lt;span class="n"&gt;lxc&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;clone&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
    &lt;span class="n"&gt;container&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;kvm&lt;/span&gt;
    &lt;span class="n"&gt;network&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;bridge&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;br0&lt;/span&gt;
  &lt;span class="n"&gt;lxc&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;local&lt;/span&gt;
    &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;series&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;trusty&lt;/span&gt;
    &lt;span class="n"&gt;lxc&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;clone&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
    &lt;span class="n"&gt;network&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;bridge&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;lxcbr0&lt;/span&gt;
    &lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;37018&lt;/span&gt;
    &lt;span class="n"&gt;api&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;17071&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;That is the relevant portion of my &lt;code&gt;~/.juju/environments.yaml&lt;/code&gt;, I use one environment with &lt;code&gt;kvm&lt;/code&gt; and the other one with &lt;code&gt;lxc&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If you're curious, the trick is to change the &lt;code&gt;state-port&lt;/code&gt; and &lt;code&gt;api-port&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;I hope this helps you.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Felipe Reyes</dc:creator><pubDate>Fri, 23 Jan 2015 00:00:00 -0300</pubDate><guid isPermaLink="false">tag:tty.cl,2015-01-23:multiple-local-environments-with-juju.html</guid><category>juju</category></item><item><title>Deploy a Python WSGI app with a Celery worker in Heroku</title><link>http://tty.cl/deploy-a-python-wsgi-app-with-a-celery-worker-in-heroku.html</link><description>&lt;p&gt;This article explains how to deploy a WSGI python web app + a
&lt;a href="http://www.celeryproject.org"&gt;celery&lt;/a&gt; worker.&lt;/p&gt;
&lt;p&gt;A recommended reading before moving forward with Heroku is
&lt;a href="https://devcenter.heroku.com/articles/process-model"&gt;The Process Model&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Jimsy" src="/images/jimsy.png" /&gt;&lt;/p&gt;
&lt;h1&gt;The Application&lt;/h1&gt;
&lt;p&gt;The application that we are going to deploy to heroku has the following components:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;WSGI App, it can be a &lt;a href="https://www.djangoproject.com/"&gt;Django&lt;/a&gt; or
  &lt;a href="http://flask.pocoo.org/"&gt;Flask&lt;/a&gt; application, the important part is that you
  provide a WSGI app as entry point.&lt;/li&gt;
&lt;li&gt;Celery, we will be using a Celery worker to run background tasks, for
  example image resizing.&lt;/li&gt;
&lt;li&gt;Database, well ... you know, we usually want to save data permanently.&lt;/li&gt;
&lt;li&gt;RabbitMQ as message broker.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;The &lt;code&gt;Procfile&lt;/code&gt;!&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;Procfile&lt;/code&gt; let the developer declare the commands each dyno has to run,
there are several process' types:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Process Type&lt;/th&gt;
&lt;th&gt;Command Example&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;web&lt;/td&gt;
&lt;td&gt;gunicorn app.wsgi -b 0.0.0.0:$PORT --debug&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;worker&lt;/td&gt;
&lt;td&gt;celery -A tasks worker --loglevel=info --concurrency=1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://devcenter.heroku.com/articles/scheduled-jobs-custom-clock-processes"&gt;clock&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;python foo.py&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;This file is the key part to instruct Heroku what to run, for the WSGI app
we'll use a &lt;code&gt;web&lt;/code&gt; process and to run the celery worker daemon we use a
&lt;code&gt;worker&lt;/code&gt; process. Each of these processes will scale independently according
to your configuration (see
&lt;a href="https://devcenter.heroku.com/articles/scaling"&gt;Scaling Your Dyno Formation&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;For our application we are going to use the following &lt;code&gt;Procfile&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;
web: gunicorn app.wsgi -b 0.0.0.0:$PORT --debug
worker: celery -A app.tasks worker --loglevel=info --concurrency=1
&lt;/pre&gt;

&lt;h2&gt;Testing your &lt;code&gt;Procfile&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;One of the nice things about the &lt;code&gt;Procfile&lt;/code&gt; is that can be interpreted by
&lt;a href="http://theforeman.org/"&gt;Foreman&lt;/a&gt;, so you can test your configuration running
the following command:&lt;/p&gt;
&lt;pre&gt;
$ foreman start
17:43:11 web.1    | started with pid 31923
17:43:11 worker.1 | started with pid 31926
17:43:12 web.1    | 2014-02-19 17:43:12 [31925] [INFO] Starting gunicorn 18.0
17:43:12 web.1    | 2014-02-19 17:43:12 [31925] [INFO] Listening at: http://0.0.0.0:5000 (31925)
17:43:12 web.1    | 2014-02-19 17:43:12 [31925] [INFO] Using worker: sync
17:43:12 web.1    | 2014-02-19 17:43:12 [31938] [INFO] Booting worker with pid: 31938
17:43:14 worker.1 | [2014-02-19 17:43:14,119: WARNING/MainProcess] /home/freyes/.virtualenvs/django-todo/local/lib/python2.7/site-packages/celery/apps/worker.py:161: CDeprecationWarning: 
17:43:14 worker.1 | Starting from version 3.2 Celery will refuse to accept pickle by default.
17:43:14 worker.1 | 
17:43:14 worker.1 | The pickle serializer is a security concern as it may give attackers
17:43:14 worker.1 | the ability to execute any command.  It's important to secure
17:43:14 worker.1 | your broker from unauthorized access when using pickle, so we think
17:43:14 worker.1 | that enabling pickle should require a deliberate action and not be
17:43:14 worker.1 | the default choice.
17:43:14 worker.1 | 
17:43:14 worker.1 | If you depend on pickle then you should set a setting to disable this
17:43:14 worker.1 | warning and to be sure that everything will continue working
17:43:14 worker.1 | when you upgrade to Celery 3.2::
17:43:14 worker.1 | 
17:43:14 worker.1 |     CELERY_ACCEPT_CONTENT = ['pickle', 'json', 'msgpack', 'yaml']
17:43:14 worker.1 | 
17:43:14 worker.1 | You must only enable the serializers that you will actually use.
17:43:14 worker.1 | 
17:43:14 worker.1 | 
17:43:14 worker.1 |   warnings.warn(CDeprecationWarning(W_PICKLE_DEPRECATED))
17:43:15 web.1    | 2014-02-19 17:43:15 [31925] [INFO] Handling signal: winch
17:43:15 web.1    | 2014-02-19 17:43:15 [31925] [INFO] SIGWINCH ignored. Not daemonized
17:43:16 worker.1 | [2014-02-19 17:43:16,683: INFO/MainProcess] Connected to amqp://guest@127.0.0.1:5672//
17:43:17 worker.1 | [2014-02-19 17:43:17,323: INFO/MainProcess] mingle: searching for neighbors
17:43:19 worker.1 | [2014-02-19 17:43:19,151: INFO/MainProcess] mingle: all alone
17:43:19 worker.1 | [2014-02-19 17:43:19,750: WARNING/MainProcess] celery@tiefighter ready.
&lt;/pre&gt;

&lt;p&gt;If &lt;code&gt;foreman start&lt;/code&gt; works, then your &lt;code&gt;Procfile&lt;/code&gt; is OK.&lt;/p&gt;
&lt;h1&gt;Create the app&lt;/h1&gt;
&lt;p&gt;Once you have configured the &lt;code&gt;Profile&lt;/code&gt; we'll create an application in Heroku
(remember to install &lt;a href="https://toolbelt.heroku.com/"&gt;heroku-toolbelt&lt;/a&gt;) running
&lt;code&gt;heroku create&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Example output:&lt;/p&gt;
&lt;pre&gt;
$ heroku create
Creating murmuring-ravine-4093... done, stack is cedar
http://murmuring-ravine-4093.herokuapp.com/ | git@heroku.com:murmuring-ravine-4093.git
&lt;/pre&gt;

&lt;p&gt;This command creates a new heroku app and it adds a new remote to push your code.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;.git/config&lt;/code&gt; example:&lt;/p&gt;
&lt;pre&gt;
[remote "heroku"]
    url = git@heroku.com:desolate-fortress-2758.git
    fetch = +refs/heads/*:refs/remotes/heroku/*
&lt;/pre&gt;

&lt;h1&gt;Adding a Database&lt;/h1&gt;
&lt;p&gt;Heroku provides databases via addons, there are several providers, but for
this article we are going to use
&lt;a href="https://addons.heroku.com/heroku-postgresql"&gt;heroku-postgres&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To add it to the recently created application run &lt;code&gt;heroku addons:add
heroku-postgresql&lt;/code&gt;. Here is an example output:&lt;/p&gt;
&lt;pre&gt;
$ heroku addons:add heroku-postgresql
Adding heroku-postgresql on murmuring-ravine-4093... done, v3 (free)
Attached as HEROKU_POSTGRESQL_YELLOW_URL
Database has been created and is available
 ! This database is empty. If upgrading, you can transfer
 ! data from another database with pgbackups:restore.
Use `heroku addons:docs heroku-postgresql` to view documentation.
&lt;/pre&gt;

&lt;h1&gt;Adding RabbitMQ&lt;/h1&gt;
&lt;p&gt;We are using RabbitMQ as message broker for Celery, for this I choose to use
&lt;a href="https://addons.heroku.com/cloudamqp"&gt;CloudAMQP&lt;/a&gt;, to add it to your app run
&lt;code&gt;heroku addons:add cloudamqp&lt;/code&gt;. Here is an example output:&lt;/p&gt;
&lt;pre&gt;
$ heroku addons:add cloudamqp
Adding cloudamqp on murmuring-ravine-4093... done, v4 (free)
Use `heroku addons:docs cloudamqp` to view documentation.
&lt;/pre&gt;

&lt;h1&gt;Adjusting Settings&lt;/h1&gt;
&lt;p&gt;Heroku passes to your app environment variables with the configuration, this a common practice in the PaaS ecosystem, so you need to modify your app to read config values from it.&lt;/p&gt;
&lt;p&gt;Here are examples to setup Celery and Django:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;dj_database_url&lt;/span&gt;

&lt;span class="n"&gt;DEFAULT_AMQP&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;amqp://guest:guest@localhost//&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;DEFAULT_DB&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;postgres://localhost&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;db_url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;DATABASE_URL&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;DEFAULT_DB&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Django settings&lt;/span&gt;
&lt;span class="n"&gt;DATABASES&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;default&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;dj_database_url&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;DEFAULT_DB&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;

&lt;span class="c1"&gt;# Celery app configuration&lt;/span&gt;
&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Celery&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;tasks&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;backend&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;db_url&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;postgres://&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;db+postgresql://&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
             &lt;span class="n"&gt;broker&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;CLOUDAMQP_URL&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;DEFAULT_AMQP&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BROKER_POOL_LIMIT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Launch the app!&lt;/h1&gt;
&lt;p&gt;Now we have everything configured, it's time to launch push our code and let Heroku do the magic running &lt;code&gt;git push heroku master&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;
$ git push heroku master 
Initializing repository, done.
Counting objects: 365, done.
Delta compression using up to 2 threads.
Compressing objects: 100% (148/148), done.
Writing objects: 100% (365/365), 39.08 KiB | 0 bytes/s, done.
Total 365 (delta 206), reused 319 (delta 185)

-----&gt; Python app detected
-----&gt; No runtime.txt provided; assuming python-2.7.6.
-----&gt; Preparing Python runtime (python-2.7.6)
-----&gt; Installing Setuptools (2.1)
-----&gt; Installing Pip (1.5.2)
-----&gt; Installing dependencies using Pip (1.5.2)
       Downloading/unpacking Django==1.5.5 (from -r requirements.txt (line 1))
         Running setup.py (path:/tmp/pip_build_u26118/Django/setup.py) egg_info for package Django

       Downloading/unpacking dj-database-url==0.2.1 (from -r requirements.txt (line 2))
         Downloading dj-database-url-0.2.1.tar.gz
         Running setup.py (path:/tmp/pip_build_u26118/dj-database-url/setup.py) egg_info for package dj-database-url

       Downloading/unpacking django-extensions==0.9 (from -r requirements.txt (line 3))
         Running setup.py (path:/tmp/pip_build_u26118/django-extensions/setup.py) egg_info for package django-extensions
[...SNIP...]
         Running setup.py install for pytz

           warning: no files found matching '*.pot' under directory 'pytz'
         Running setup.py install for billiard
           building '_billiard' extension
           gcc -pthread -fno-strict-aliasing -g -O2 -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC -DHAVE_SEM_OPEN=1 -DHAVE_FD_TRANSFER=1 -DHAVE_SEM_TIMEDWAIT=1 -IModules/_billiard -I/app/.heroku/python/include/python2.7 -c Modules/_billiard/multiprocessing.c -o build/temp.linux-x86_64-2.7/Modules/_billiard/multiprocessing.o
           gcc -pthread -fno-strict-aliasing -g -O2 -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC -DHAVE_SEM_OPEN=1 -DHAVE_FD_TRANSFER=1 -DHAVE_SEM_TIMEDWAIT=1 -IModules/_billiard -I/app/.heroku/python/include/python2.7 -c Modules/_billiard/socket_connection.c -o build/temp.linux-x86_64-2.7/Modules/_billiard/socket_connection.o
           gcc -pthread -fno-strict-aliasing -g -O2 -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC -DHAVE_SEM_OPEN=1 -DHAVE_FD_TRANSFER=1 -DHAVE_SEM_TIMEDWAIT=1 -IModules/_billiard -I/app/.heroku/python/include/python2.7 -c Modules/_billiard/semaphore.c -o build/temp.linux-x86_64-2.7/Modules/_billiard/semaphore.o
           gcc -pthread -shared build/temp.linux-x86_64-2.7/Modules/_billiard/multiprocessing.o build/temp.linux-x86_64-2.7/Modules/_billiard/socket_connection.o build/temp.linux-x86_64-2.7/Modules/_billiard/semaphore.o -lrt -o build/lib.linux-x86_64-2.7/_billiard.so

           warning: no files found matching '*.py' under directory 'Lib'
         Running setup.py install for anyjson

       Successfully installed Django dj-database-url django-extensions django-respite django-widget-tweaks gunicorn ipdb ipython psycopg2 readline dj-static static Celery SQLAlchemy pystache kombu pytz billiard amqp anyjson
       Cleaning up...
-----&gt; Collecting static files
       /app/.heroku/python/lib/python2.7/site-packages/django/conf/urls/defaults.py:3: DeprecationWarning: django.conf.urls.defaults is deprecated; use django.conf.urls instead
       0 static files copied.

-----&gt; Discovering process types
       Procfile declares types -&gt; web, worker

-----&gt; Compressing... done, 44.2MB
-----&gt; Launching... done, v6
       http://murmuring-ravine-4093.herokuapp.com deployed to Heroku

To git@heroku.com:murmuring-ravine-4093.git
 * [new branch]      master -&gt; master
 &lt;/pre&gt;

&lt;h1&gt;Initialize the Database&lt;/h1&gt;
&lt;p&gt;We have our app running ... but the database wasn't initialized. We are using
Django in this example and we are going to run &lt;code&gt;python manage.py syncdb
--noinput&lt;/code&gt;, but for other frameworks you just replace the command with the
one you use to initialize/bootstrap the database.&lt;/p&gt;
&lt;pre&gt;
$ heroku run python manage.py syncdb --noinput
Running `python manage.py syncdb --noinput` attached to terminal... up, run.5257
/app/.heroku/python/lib/python2.7/site-packages/django/conf/urls/defaults.py:3: DeprecationWarning: django.conf.urls.defaults is deprecated; use django.conf.urls instead
  DeprecationWarning)

Creating tables ...
Creating table auth_permission
Creating table auth_group_permissions
Creating table auth_group
Creating table auth_user_groups
Creating table auth_user_user_permissions
Creating table auth_user
Creating table django_content_type
Creating table django_session
Creating table django_site
Creating table tasks_task
Installing custom SQL ...
Installing indexes ...
Installed 0 object(s) from 0 fixture(s)
&lt;/pre&gt;

&lt;p&gt;And now we are ready to take a look to our app running &lt;code&gt;heroku open&lt;/code&gt; which will open your browser pointing to your app.&lt;/p&gt;
&lt;h1&gt;What now?&lt;/h1&gt;
&lt;p&gt;We have the app running and a celery worker, now it's moment to assign a
decent domain and other minor settings, heroku provides an option called
&lt;a href="https://devcenter.heroku.com/articles/production-check"&gt;Production Check&lt;/a&gt;,
you should use it before going live with your site.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Felipe Reyes</dc:creator><pubDate>Mon, 24 Feb 2014 00:00:00 -0300</pubDate><guid isPermaLink="false">tag:tty.cl,2014-02-24:deploy-a-python-wsgi-app-with-a-celery-worker-in-heroku.html</guid><category>development</category></item><item><title>Deploying a Python WSGI app with Vagrant and Puppet</title><link>http://tty.cl/deploying-a-python-wsgi-app-with-vagrant-and-puppet.html</link><description>&lt;p&gt;These days the tendency among software companies is to have everything under
version control systems (i.e. &lt;a href="http://git-scm.com/"&gt;Git&lt;/a&gt;,
&lt;a href="http://mercurial.selenic.com/"&gt;Mercurial&lt;/a&gt;), all these is part of two software
development strategies: &lt;a href="http://en.wikipedia.org/wiki/Continuous_integration"&gt;continuous integration&lt;/a&gt;
and &lt;a href="http://en.wikipedia.org/wiki/Continuous_delivery"&gt;continuous delivery&lt;/a&gt;.
To read more about them I recommend you to read &lt;a href="http://www.amazon.com/Continuous-Integration-Improving-Software-Reducing/dp/0321336380/ref=sr_1_1?ie=UTF8&amp;amp;qid=1390443569&amp;amp;sr=8-1&amp;amp;keywords=continuous+integration"&gt;"Continuous Integration: Improving Software Quality and Reducing Risk"&lt;/a&gt;
and &lt;a href="http://www.amazon.com/Continuous-Delivery-Deployment-Automation-Addison-Wesley/dp/0321601912/ref=sr_1_3?ie=UTF8&amp;amp;qid=1390443569&amp;amp;sr=8-3&amp;amp;keywords=continuous+integration"&gt;"Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation"&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;So I took &lt;a href="http://www.vagrantup.com/"&gt;Vagrant&lt;/a&gt; to provision the machines that
will run my &lt;a href="https://github.com/freyes/flask-hello-world"&gt;example webapp&lt;/a&gt;, and
&lt;a href="http://puppetlabs.com"&gt;Puppet&lt;/a&gt; will take care of configuring my system.&lt;/p&gt;
&lt;p&gt;My recipes are in continuous development, so you should refer to the git
repositories for the latest information about how they work.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/freyes/vagrant-puppet-example"&gt;Vagrant and Puppet recipes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/freyes/flask-hello-world"&gt;Flask hello world&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Felipe Reyes</dc:creator><pubDate>Wed, 22 Jan 2014 00:00:00 -0300</pubDate><guid isPermaLink="false">tag:tty.cl,2014-01-22:deploying-a-python-wsgi-app-with-vagrant-and-puppet.html</guid><category>python</category><category>vagrant</category><category>puppet</category><category>wsgi</category></item><item><title>How to start with Emacs</title><link>http://tty.cl/how-to-start-with-emacs.html</link><description>&lt;h2&gt;Part 0&lt;/h2&gt;
&lt;p&gt;Before I could really be productive with emacs, I failed a couple of
times, because I knew that emacs were powerful, but the default
configuration shows you a simple text editor that look awful, without
syntax highlight, without anti-alias, a color schema that really
sucks.&lt;/p&gt;
&lt;p&gt;In GNU/Linux (to not piss off rms xD)I was never found a really nice
(text) editor, because all the available suck at some point (even
emacs sucks sometime, but suck less than the rest :P), so when I met
zeus lead me in the first steps giving me some elisp tips, I could
start swimming by myself and improving my emacs configuration file,
and even teaching some tips to the mentor :P.&lt;/p&gt;
&lt;p&gt;So I will start a series of articles of how to start with emacs,
especially giving the recipes (elisp code) of how to obtain the
desired behavior.&lt;/p&gt;
&lt;h2&gt;Part 1&lt;/h2&gt;
&lt;p&gt;First of all, All my tips related to the underlying Operative System
are using GNU/Linux Debian, so if you are using another distribution
(or even another OS) you will have to look for the appropriate way to
do the task, if you send me how to do it with another OS I will add it
to the entry.&lt;/p&gt;
&lt;h3&gt;What is emacs?&lt;/h3&gt;
&lt;p&gt;Well, emacs doesn't exists, the correct name is GNU Emacs for the
series of post, because there is a lot different flavors of emacs, for
example XEmacs, Aquamacs, and others.&lt;/p&gt;
&lt;p&gt;The GNU Emacs website says:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;GNU Emacs is an extensible, customizable text editor—and more. At
its core is an interpreter for Emacs Lisp, a dialect of the Lisp
programming language with extensions to support text editing.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;What can I do with emacs?&lt;/p&gt;
&lt;p&gt;It's a text editor, so write text :P, but also:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Develop software in a wide range of compute languages, like C, C++,
  elisp, C#, ruby, python, java, ...&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Mail client&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Chat with your irc folks&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Surf on the web&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;And other things that will be discussed in their respectives posts&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Install GNU Emacs&lt;/h3&gt;
&lt;p&gt;First you must decide witch version of emacs do you want to use?,
exists emacs22, which is the current stable release, and also emacs23
(aka emacs-cvs) which is the development version, but currently is in
the state of features freeze, so It's pretty stable to me, if you use
emacs22 you will not have anti-alias, something that is very nice to
the eyes when you spend the day developing, almost all the tips
discussed in the series will be neutral, except the related with
anti-alias and multi-tty.&lt;/p&gt;
&lt;h3&gt;Debian&lt;/h3&gt;
&lt;p&gt;To use emacs22 you can just use the debian official archive and
execute&lt;/p&gt;
&lt;pre&gt;
apt-get install emacs22
&lt;/pre&gt;

&lt;p&gt;But if you want to use the emacs cvs there is a repository maintained
by Romain Francoise of the package emacs-snapshot which is a binary
package of the cvs code (this is the one that I use). To use this repo
you must the following to you source.list (to obtain more details
visit the webpage of the repo)&lt;/p&gt;
&lt;pre&gt;
deb http://emacs.naquadah.org/ unstable/
&lt;/pre&gt;

&lt;p&gt;Then just install the emacs-snapshot package.&lt;/p&gt;
&lt;h2&gt;Part 2&lt;/h2&gt;
&lt;p&gt;Emacs uses a configuration file that is by default placed in your home
directory, the file is called .emacs (I don't know if on win32 systems
is also called .emacs). This file contents is elisp code, so for full
control of emacs it's imperative learn elisp, but I still didn't learn
elisp and I'm an emacs user :), so you can learn elisp while you are
looking for snippets of code.&lt;/p&gt;
&lt;h3&gt;Concepts&lt;/h3&gt;
&lt;p&gt;I will have to explain some concepts that are important to understand
why emacs behave in the way that it does.&lt;/p&gt;
&lt;p&gt;In emacs there are buffers, there is the minibuffer that is where you
type the emacs commands (or elisp interactive functions), and the
other buffers could represent an opened file, a pipe, or just a
temporary editing space that is not attached to a file, the name of
the last type of buffers start and end with &lt;em&gt;, for example &lt;/em&gt;scratch*&lt;/p&gt;
&lt;p&gt;Emacs has something called 'modes', it's something like the way that a
determined buffer must behave, for example if you are going to open C
source code file the c-mode should be loaded, and it will help you in
task of develop with the C language. There are 2 kinds of modes, the
major and minor modes, one buffer can only have one major mode and
zero or more minor modes.&lt;/p&gt;
&lt;h3&gt;First tweaks&lt;/h3&gt;
&lt;p&gt;Emacs is a software with a huge history and tradition, so there are
some things that for somebody that is formed in the last 10 years in
computing terms there some musts that you must have in you emacs
config file, like the transient-mark-mode&lt;/p&gt;
&lt;p&gt;The transient mark mode highlights the selected region of text, by
defaults this is disabled so I recommend you enable it with pasting
the following in your .emacs&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;transient-mark-mode&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Fill you name and email to let the modes that need that information
could use, this is done with the following snippet of code&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;user-mail-address&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;homer@example.com&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;user-full-name&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Homer J. Simpsons&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you like to use Ctrl+g to jump to a line number then you should add
the following code&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;global-set-key&lt;/span&gt; &lt;span class="nv"&gt;[&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;control&lt;/span&gt; &lt;span class="nv"&gt;g&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nv"&gt;]&lt;/span&gt; &lt;span class="ss"&gt;&amp;#39;goto-line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;One of the sweetest feature that must have a text editor is syntax
highlight, well emacs has this, but disabled by default, with the
following code you will have it enabled always&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="ss"&gt;&amp;#39;font-lock&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;global-font-lock-mode&lt;/span&gt; &lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I think that this is enough for this entry, the next entries probably
will be more fun to write and read, because i will start talking about
the major modes, one mode per entry, probably the next one will be the
C mode.&lt;/p&gt;
&lt;h2&gt;Emacswiki&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://www.emacswiki.org/"&gt;Emacswiki&lt;/a&gt; is probably the best source to find emacs-specific tip-n-tricks&lt;/p&gt;
&lt;h2&gt;Initial Configuration&lt;/h2&gt;
&lt;p&gt;Suggested initial configuration:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;;; to debug the .emacs file&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;debug-on-error&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;visible-bell&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;;; setup the default mode to use&lt;/span&gt;
&lt;span class="c1"&gt;;;Text mode is happier than Fundamental mode ;-)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;default-major-mode&lt;/span&gt; &lt;span class="ss"&gt;&amp;#39;text-mode&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;;; define the mail and name&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;user-mail-address&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;foo@example.com&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;user-full-name&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Foo Bar&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;;; be nice with X clipboard&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;x-select-enable-clipboard&lt;/span&gt; &lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;;; use Control+g fot goto-line&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;global-set-key&lt;/span&gt; &lt;span class="nv"&gt;[&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;control&lt;/span&gt; &lt;span class="nv"&gt;g&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nv"&gt;]&lt;/span&gt; &lt;span class="ss"&gt;&amp;#39;goto-line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;;; enable menubar and tool bar&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;menu-bar-mode&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;tool-bar-mode&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;;; turn on font-lock mode&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;global-font-lock-mode&lt;/span&gt; &lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="ss"&gt;&amp;#39;font-lock&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;; enable syntax highlighting&lt;/span&gt;

&lt;span class="c1"&gt;;; simple cut, copy, paste&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;global-set-key&lt;/span&gt; &lt;span class="nv"&gt;[f2]&lt;/span&gt; &lt;span class="ss"&gt;&amp;#39;clipboard-kill-region&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;global-set-key&lt;/span&gt; &lt;span class="nv"&gt;[f3]&lt;/span&gt; &lt;span class="ss"&gt;&amp;#39;clipboard-kill-ring-save&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;global-set-key&lt;/span&gt; &lt;span class="nv"&gt;[f4]&lt;/span&gt; &lt;span class="ss"&gt;&amp;#39;clipboard-yank&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;global-set-key&lt;/span&gt; &lt;span class="nv"&gt;[end]&lt;/span&gt; &lt;span class="ss"&gt;&amp;#39;end-of-line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;global-set-key&lt;/span&gt; &lt;span class="nv"&gt;[home]&lt;/span&gt; &lt;span class="ss"&gt;&amp;#39;beginning-of-line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;;;touche del et suppr&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;global-set-key&lt;/span&gt; &lt;span class="nv"&gt;[delete]&lt;/span&gt; &lt;span class="ss"&gt;&amp;#39;delete-char&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;;;(dysplay question in &amp;#39;y/n&amp;#39; instead of &amp;#39;yes/no&amp;#39;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;fset&lt;/span&gt; &lt;span class="ss"&gt;&amp;#39;yes-or-no-p&lt;/span&gt; &lt;span class="ss"&gt;&amp;#39;y-or-n-p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;;; tramp let you open remote files over ssh&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="ss"&gt;&amp;#39;tramp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;tramp-default-method&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;ssh&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;;;; Prevent Extraneous Tabs&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;setq-default&lt;/span&gt; &lt;span class="nv"&gt;indent-tabs-mode&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Felipe Reyes</dc:creator><pubDate>Tue, 03 Dec 2013 00:00:00 -0300</pubDate><guid isPermaLink="false">tag:tty.cl,2013-12-03:how-to-start-with-emacs.html</guid></item><item><title>.emacs</title><link>http://tty.cl/emacs.html</link><description>&lt;p&gt;I hope you enjoy disecting my emacs config :D&lt;/p&gt;
&lt;p&gt;```elisp
;; to debug the .emacs file
(setq debug-on-error nil)&lt;/p&gt;
&lt;p&gt;;; setup the default mode to use
;;Text mode is happier than Fundamental mode ;-)
(setq default-major-mode 'text-mode)&lt;/p&gt;
&lt;p&gt;;; define the mail and name
(setq user-mail-address "your@mail.com")
(setq user-full-name "Your Name")&lt;/p&gt;
&lt;p&gt;;;;;;;;;;;;;,;
;; UI setup ;;
;;;;;;;;;;;;;;
(require 'swbuff)
(require 'linum)
;; setup the tab to 4 spaces width
(setq tab-width 4)&lt;/p&gt;
&lt;p&gt;(if (eq window-system 'x)
    (set-face-attribute 'default nil :font "Consolas-10"))
;; avoid minimize on C-z, but only in X
(if (eq window-system 'x)
    (global-set-key [C-z] nil))&lt;/p&gt;
&lt;p&gt;;; setup default font for mac
(if (eq system-type 'darwin)
    (set-face-attribute 'default nil :font "Consolas-14"))&lt;/p&gt;
&lt;p&gt;(tool-bar-mode -1) ;; turn off toolbar
(scroll-bar-mode -1) ;; turn off scrollbar&lt;/p&gt;
&lt;p&gt;;; Show tabs
(defface extra-whitespace-face
  '((t (:background "dim gray")))
  "Used for tabs and such.")
(defvar my-extra-keywords
  '(("\t" . 'extra-whitespace-face)))&lt;/p&gt;
&lt;p&gt;;; color-theme
(add-to-list 'load-path "~/.emacs.d/elisp/color-theme/")
(require 'color-theme)
;; (require 'color-theme-tango)
;; (color-theme-tango)&lt;/p&gt;
&lt;p&gt;(require 'color-theme-arjen)
(color-theme-arjen)&lt;/p&gt;
&lt;p&gt;(iswitchb-mode 1)
(global-set-key (kbd "&lt;C-tag&gt;")           'swbuff-switch-to-next-buffer)
(global-set-key (kbd "&lt;C-S-iso-lefttab&gt;") 'swbuff-switch-to-previous-buffer)&lt;/p&gt;
&lt;p&gt;;;;;;;;;;;
;; Text ;;
;;;;;;;;;;
(add-hook 'text-mode-hook
          (lambda () (font-lock-add-keywords nil my-extra-keywords)))&lt;/p&gt;
&lt;p&gt;;;;;;;;;;;;;;;;
;; rect-mark ;;
;;;;;;;;;;;;;;;
(require 'rect-mark)
(global-set-key (kbd "C-x r C-SPC") 'rm-set-mark)
(global-set-key (kbd "C-x r C-x")   'rm-exchange-point-and-mark)
(global-set-key (kbd "C-x r C-w")   'rm-kill-region)
(global-set-key (kbd "C-x r M-w")   'rm-kill-ring-save)&lt;/p&gt;
&lt;p&gt;;;;;;;;;;
;; sql ;;
;;;;;;;;;
(add-hook 'sql-mode-hook
           (lambda ()
             (font-lock-add-keywords nil my-extra-keywords)))&lt;/p&gt;
&lt;p&gt;;;;;;;;;;;;;;;
;; Org mode ;;
;;;;;;;;;;;;;;
(load-file "~/.emacs.d/org-mode.el")&lt;/p&gt;
&lt;p&gt;;;;;;;;;;;;;;;;;;;;;
;; remember notes ;;
;;;;;;;;;;;;;;;;;;;;
(add-to-list 'load-path "~/.emacs.d/elisp/remember-el")&lt;/p&gt;
&lt;p&gt;;; (require 'remember-autoloads)
(autoload 'remember "remember" nil t)
(setq remember-data-file "~/.notes.txt")
(global-set-key (kbd "C-c r") 'remember)&lt;/p&gt;
&lt;p&gt;(defun wicked/remember-review-file ()
  "Open `remember-data-file'."
  (interactive)
  (find-file-other-window remember-data-file))
(global-set-key (kbd "C-c r") 'wicked/remember-review-file)&lt;/p&gt;
&lt;p&gt;;;;;;;;;;;;;;;;
;; yasnippet ;;
;;;;;;;;;;;;;;;
(require 'yasnippet)
(yas/initialize)
(yas/load-directory "~/.emacs.d/snippets/")&lt;/p&gt;
&lt;p&gt;;;;;;;;;;;;;;;;;
;; javascript ;;
;;;;;;;;;;;;;;;;
(autoload 'js2-mode "js2-mode" nil t)
(add-to-list 'auto-mode-alist
             '("\.js$" . js2-mode))&lt;/p&gt;
&lt;p&gt;(add-to-list 'auto-mode-alist
             '("\.dot$" . graphviz-dot-mode))&lt;/p&gt;
&lt;p&gt;;;;;;;;;;;;
;; dired ;;
;;;;;;;;;;;
(require 'dired-x)
(require 'dired-single) ;; http://www.northbound-train.com/emacs/dired-single.el
(defun my-dired-init ()
  "Bunch of stuff to run for dired, either immediately or when it's
         loaded."
  ;; &lt;add other stuff here&gt;
  (define-key dired-mode-map [return] 'dired-single-buffer)
  (define-key dired-mode-map [mouse-1] 'dired-single-buffer-mouse)
  (define-key dired-mode-map "^"
    (function
     (lambda nil (interactive) (dired-single-buffer "..")))))&lt;/p&gt;
&lt;p&gt;;; if dired's already loaded, then the keymap will be bound
(if (boundp 'dired-mode-map)
    ;; we're good to go; just add our bindings
    (my-dired-init)
  ;; it's not loaded yet, so add our bindings to the load-hook
  (add-hook 'dired-load-hook 'my-dired-init))&lt;/p&gt;
&lt;p&gt;(setq dired-omit-files-p t)
(setq-default dired-omit-files-p t) ; this is buffer-local variable
(setq dired-omit-files
      (concat dired-omit-files "*.tsv|\|^\..+$"))&lt;/p&gt;
&lt;p&gt;;;;;;;;;;;
;; yaml ;;
;;;;;;;;;;
(require 'yaml-mode)
(add-to-list 'auto-mode-alist '("\.yml$" . yaml-mode))
(add-to-list 'auto-mode-alist '("\.yaml$" . yaml-mode))&lt;/p&gt;
&lt;p&gt;;;;;;;;;;;;;;;;;
;; multi-term ;;
;;;;;;;;;;;;;;;;
(autoload 'multi-term "multi-term" nil t)
(autoload 'multi-term-next "multi-term" nil t)&lt;/p&gt;
&lt;p&gt;(setq multi-term-program "/bin/bash")   ;; use bash
;; (setq multi-term-program "/bin/zsh") ;; or use zsh...&lt;/p&gt;
&lt;p&gt;;; only needed if you use autopair
;; (add-hook 'term-mode-hook
;;   #'(lambda () (setq autopair-dont-activate t)))&lt;/p&gt;
&lt;p&gt;(global-set-key (kbd "C-c t") 'multi-term-next)
(global-set-key (kbd "C-c T") 'multi-term) ;; create a new one&lt;/p&gt;
&lt;p&gt;;; use Control+g fot goto-line
(global-set-key [(control g)] 'goto-line)&lt;/p&gt;
&lt;p&gt;;;;;;;;;;;;;
;; Python ;;
;;;;;;;;;;;;&lt;/p&gt;
&lt;p&gt;(setq py-python-command "/usr/bin/python")&lt;/p&gt;
&lt;p&gt;(setq auto-mode-alist (cons '("\.py$" . python-mode) auto-mode-alist))
(setq interpreter-mode-alist (cons '("python" . python-mode)
                                   interpreter-mode-alist))
(autoload 'python-mode "python-mode" "Python editing mode." t)&lt;/p&gt;
&lt;p&gt;;; show pydoc
;; http://www.emacswiki.org/cgi-bin/wiki/PythonMode
(defun my-python-documentation (w)
  "Launch PyDOC on the Word at Point"
  (interactive
   (list (let&lt;em&gt; ((word (thing-at-point 'word))
                (input (read-string
                        (format "pydoc entry%s: "
                                (if (not word) "" (format " (default %s)" word))))))
           (if (string= input "")
               (if (not word) (error "No pydoc args given")
                 word) ;sinon word
             input)))) ;sinon input
  (shell-command (concat py-python-command " -c \"from pydoc import help;help(\'" w "\')\"") "&lt;/em&gt;PYDOCS&lt;em&gt;")
  (view-buffer-other-window "&lt;/em&gt;PYDOCS*" t 'kill-buffer-and-window))&lt;/p&gt;
&lt;p&gt;;;to show the pydoc help on the word at point
(add-hook 'python-mode-hook
          (function (lambda ()
                      (local-set-key [(control f1)] 'my-python-documentation)
                      )))&lt;/p&gt;
&lt;p&gt;;;para indentar o completar con tab
(add-hook 'python-mode-hook
          (function (lambda ()
                      (local-set-key (kbd "&lt;tab&gt;") 'indent-or-complete)
                      )))
(add-hook 'python-mode-hook
          (function (lambda ()
                      (local-set-key (kbd "C-x #") 'comment-or-uncomment-region)
                      )))&lt;/p&gt;
&lt;p&gt;;;pdb setup, note the python version
(setq pdb-path '/usr/bin/pdb
      gud-pdb-command-name (symbol-name pdb-path))
(defadvice pdb (before gud-query-cmdline activate)
  "Provide a better default command line when called interactively."
  (interactive
   (list (gud-query-cmdline pdb-path
                            (file-name-nondirectory buffer-file-name)))))&lt;/p&gt;
&lt;p&gt;;; para usar pdb con F8
(add-hook 'python-mode-hook
          (function (lambda ()
                      (local-set-key (kbd "&lt;f8&gt;") 'pdb)
                      )))
;; para usar pydoc
(add-hook 'python-mode-hook
          '(lambda () (eldoc-mode 1)) t)&lt;/p&gt;
&lt;p&gt;;;show tab in python mode
(add-hook 'python-mode-hook
          (lambda ()
            (font-lock-add-keywords nil my-extra-keywords)))&lt;/p&gt;
&lt;p&gt;;; para mostrar el trailing whitespace
(add-hook 'python-mode-hook
          (lambda ()
            (setq show-trailing-whitespace t)))&lt;/p&gt;
&lt;p&gt;;; usar pylint
(when (load "flymake" t)
  (defun flymake-pylint-init ()
    (let* ((temp-file (flymake-init-create-temp-buffer-copy
                       'flymake-create-temp-inplace))
           (local-file (file-relative-name
                        temp-file
                        (file-name-directory buffer-file-name))))
      (list "epylint" (list local-file))))&lt;/p&gt;
&lt;p&gt;(add-to-list 'flymake-allowed-file-name-masks
               '("\.py\'" flymake-pylint-init)))&lt;/p&gt;
&lt;p&gt;;; (require 'pymacs)
;; (require 'pycomplete)
;; (autoload 'pymacs-load "ropemacs" "rope-")
;; (autoload 'pymacs-load "pymacs" nil t)
;; (autoload 'pymacs-eval "pymacs" nil t)
;; (autoload 'pymacs-apply "pymacs")
;; (autoload 'pymacs-call "pymacs")&lt;/p&gt;
&lt;p&gt;;;(rope-init)&lt;/p&gt;
&lt;p&gt;;; para autocompletar los cierres de parentesis o de string
;;(add-hook 'python-mode-hook
;;    (lambda ()
;;      (define-key python-mode-map "\"" 'electric-pair)
;;      (define-key python-mode-map "\'" 'electric-pair)
;;      (define-key python-mode-map "(" 'electric-pair)
;;      (define-key python-mode-map "[" 'electric-pair)
;;      (define-key python-mode-map "{" 'electric-pair)))&lt;/p&gt;
&lt;p&gt;;;(defun electric-pair ()
;;  "Insert character pair without sournding spaces"
;;  (interactive)
;;  (let (parens-require-spaces)
;;    (insert-pair)))&lt;/p&gt;
&lt;p&gt;;;;;;;;;;;
;; djcb ;;
;;;;;;;;;;
(defun djcb-opacity-modify (&amp;amp;optional dec)
  "modify the transparency of the emacs frame; if DEC is t,
    decrease the transparency, otherwise increase it in 10%-steps"
  (let* ((alpha-or-nil (frame-parameter nil 'alpha)) ; nil before setting
         (oldalpha (if alpha-or-nil alpha-or-nil 100))
         (newalpha (if dec (- oldalpha 10) (+ oldalpha 10))))
    (when (and (&amp;gt;= newalpha frame-alpha-lower-limit) (&amp;lt;= newalpha 100))
      (modify-frame-parameters nil (list (cons 'alpha newalpha))))))&lt;/p&gt;
&lt;p&gt;;; C-8 will increase opacity (== decrease transparency)
;; C-9 will decrease opacity (== increase transparency
;; C-0 will returns the state to normal
(global-set-key (kbd "C-8") '(lambda()(interactive)(djcb-opacity-modify)))
(global-set-key (kbd "C-9") '(lambda()(interactive)(djcb-opacity-modify t)))
(global-set-key (kbd "C-0") '(lambda()(interactive)
                               (modify-frame-parameters nil `((alpha . 100)))))&lt;/p&gt;
&lt;p&gt;;;;;;;;;;;;;;;;;;;;;;;
;; Quit this buffer ;;
;;;;;;;;;;;;;;;;;;;;;;
(defun quit-this-buffer ()
  "Exit current buffer by selecting some other buffer."
  (interactive)
  (switch-to-buffer (prog1 (other-buffer (current-buffer))
              (bury-buffer (current-buffer)))))
(global-set-key "\C-cq" 'quit-this-buffer)&lt;/p&gt;
&lt;p&gt;;;-&amp;gt; backspace on a selected region -&amp;gt; deletion
(delete-selection-mode t)&lt;/p&gt;
&lt;p&gt;;;scroll line per line (1 line instead of 3)
(setq scroll-step 1)&lt;/p&gt;
&lt;p&gt;;;display line and column number in toolbar
(setq line-number-mode t)
(setq column-number-mode t)&lt;/p&gt;
&lt;p&gt;;;show_paren mode
(show-paren-mode t)&lt;/p&gt;
&lt;p&gt;;; display clock
(display-time)&lt;/p&gt;
&lt;p&gt;;; Use visible beel instead of beep
(setq visible-bell 't)&lt;/p&gt;
&lt;p&gt;;;(dysplay question in 'y/n' instead of 'yes/no')
(fset 'yes-or-no-p 'y-or-n-p)&lt;/p&gt;
&lt;p&gt;;; Save all my backup files in a specific directory
;(defun make-backup-file-name (file)
;  (concat "~/.autosave/" (file-name-nondirectory file)))
(setq backup-directory-alist
      &lt;code&gt;((".*" . ,temporary-file-directory)))
(setq auto-save-file-name-transforms&lt;/code&gt;((".*" ,temporary-file-directory t)))
(windmove-default-keybindings)&lt;/p&gt;
&lt;p&gt;(setq tramp-default-method "ssh")&lt;/p&gt;
&lt;p&gt;(put 'upcase-region 'disabled nil)
(put 'downcase-region 'disabled nil)&lt;/p&gt;
&lt;p&gt;;;; Prevent Extraneous Tabs
(setq-default indent-tabs-mode nil)
```&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Basic Configuration&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;```
;; to debug the .emacs file
(setq debug-on-error nil)&lt;/p&gt;
&lt;p&gt;;; setup the default mode to use
;;Text mode is happier than Fundamental mode ;-)
(setq default-major-mode 'text-mode)&lt;/p&gt;
&lt;p&gt;;; define the mail and name
(setq user-mail-address "foobar@example.com")
(setq user-full-name "Foo Bar")&lt;/p&gt;
&lt;p&gt;;; define the ispell dictionary to use
(setq ispell-dictionary "en")&lt;/p&gt;
&lt;p&gt;;; setup the tab to 4 spaces width
(setq tab-width 4)&lt;/p&gt;
&lt;p&gt;(tool-bar-mode -1) ;; turn off toolbar
(scroll-bar-mode -1) ;; turn off scrollbar&lt;/p&gt;
&lt;p&gt;;; color-theme
;; http://www.emacswiki.org/emacs/ColorTheme
;; http://www.nongnu.org/color-theme
(add-to-list 'load-path "~/.emacs.d/elisp/color-theme/")
(require 'color-theme)
(require 'color-theme-arjen)
(color-theme-arjen)&lt;/p&gt;
&lt;p&gt;;; http://www.emacswiki.org/emacs/SwBuff
(require 'swbuff)
(global-set-key [(control tab)]       'swbuff-switch-to-next-buffer)
(global-set-key (kbd "&lt;C-S-iso-lefttab&gt;") 'swbuff-switch-to-previous-buffer)&lt;/p&gt;
&lt;p&gt;(require 'whitespace)
(setq whitespace-style '(face empty tabs lines-tail trailing))
(add-hook 'python-mode-hook 'whitespace-mode)&lt;/p&gt;
&lt;p&gt;;; Show tabs
(defface extra-whitespace-face
  '((t (:background "dim gray")))
  "Used for tabs and such.")
(defvar my-extra-keywords
  '(("\t" . 'extra-whitespace-face)))&lt;/p&gt;
&lt;p&gt;(add-hook 'text-mode-hook
          (lambda () (font-lock-add-keywords nil my-extra-keywords)))&lt;/p&gt;
&lt;p&gt;;; http://www.emacswiki.org/emacs/RectangleMark
(require 'rect-mark)
(global-set-key (kbd "C-x r C-SPC") 'rm-set-mark)
(global-set-key (kbd "C-x r C-x")   'rm-exchange-point-and-mark)
(global-set-key (kbd "C-x r C-w")   'rm-kill-region)
(global-set-key (kbd "C-x r M-w")   'rm-kill-ring-save)
```&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Python&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;```
;;;;;;;;;;;;
;; Python ;;
;;;;;;;;;;;;&lt;/p&gt;
&lt;p&gt;(setq py-python-command "/usr/bin/python")&lt;/p&gt;
&lt;p&gt;(setq auto-mode-alist (cons '("\.py$" . python-mode) auto-mode-alist))
(setq interpreter-mode-alist (cons '("python" . python-mode)
                                   interpreter-mode-alist))
(autoload 'python-mode "python-mode" "Python editing mode." t)&lt;/p&gt;
&lt;p&gt;;; show pydoc
;; http://www.emacswiki.org/cgi-bin/wiki/PythonMode
(defun my-python-documentation (w)
  "Launch PyDOC on the Word at Point"
  (interactive
   (list (let&lt;em&gt; ((word (thing-at-point 'word))
                (input (read-string
                        (format "pydoc entry%s: "
                                (if (not word) "" (format " (default %s)" word))))))
           (if (string= input "")
               (if (not word) (error "No pydoc args given")
                 word) ;sinon word
             input)))) ;sinon input
  (shell-command (concat py-python-command " -c \"from pydoc import help;help(\'" w "\')\"") "&lt;/em&gt;PYDOCS&lt;em&gt;")
  (view-buffer-other-window "&lt;/em&gt;PYDOCS*" t 'kill-buffer-and-window))&lt;/p&gt;
&lt;p&gt;;;to show the pydoc help on the word at point
(add-hook 'python-mode-hook
          (function (lambda ()
                      (local-set-key [(control f1)] 'my-python-documentation)
                      )))&lt;/p&gt;
&lt;p&gt;;;para indentar o completar con tab
(add-hook 'python-mode-hook
          (function (lambda ()
                      (local-set-key (kbd "&lt;tab&gt;") 'indent-or-complete)
                      )))
(add-hook 'python-mode-hook
          (function (lambda ()
                      (local-set-key (kbd "C-x #") 'comment-or-uncomment-region)
                      )))&lt;/p&gt;
&lt;p&gt;;;pdb setup, note the python version
(setq pdb-path '/usr/bin/pdb
      gud-pdb-command-name (symbol-name pdb-path))
(defadvice pdb (before gud-query-cmdline activate)
  "Provide a better default command line when called interactively."
  (interactive
   (list (gud-query-cmdline pdb-path
                            (file-name-nondirectory buffer-file-name)))))&lt;/p&gt;
&lt;p&gt;;; para usar pdb con F8
(add-hook 'python-mode-hook
          (function (lambda ()
                      (local-set-key (kbd "&lt;f8&gt;") 'pdb)
                      )))
;; para usar pydoc
(add-hook 'python-mode-hook
          '(lambda () (eldoc-mode 1)) t)&lt;/p&gt;
&lt;p&gt;;;show tab in python mode
(add-hook 'python-mode-hook
          (lambda ()
            (font-lock-add-keywords nil my-extra-keywords)))&lt;/p&gt;
&lt;p&gt;;; para mostrar el trailing whitespace
(add-hook 'python-mode-hook
          (lambda ()
            (setq show-trailing-whitespace t)))&lt;/p&gt;
&lt;p&gt;;; usar pylint
(when (load "flymake" t)
  (defun flymake-pylint-init ()
    (let* ((temp-file (flymake-init-create-temp-buffer-copy
                       'flymake-create-temp-inplace))
           (local-file (file-relative-name
                        temp-file
                        (file-name-directory buffer-file-name))))
      (list "epylint" (list local-file))))&lt;/p&gt;
&lt;p&gt;(add-to-list 'flymake-allowed-file-name-masks
               '("\.py\'" flymake-pylint-init)))&lt;/p&gt;
&lt;p&gt;;; (require 'pymacs)
;; (require 'pycomplete)
;; (autoload 'pymacs-load "ropemacs" "rope-")
;; (autoload 'pymacs-load "pymacs" nil t)
;; (autoload 'pymacs-eval "pymacs" nil t)
;; (autoload 'pymacs-apply "pymacs")
;; (autoload 'pymacs-call "pymacs")&lt;/p&gt;
&lt;p&gt;;;(rope-init)&lt;/p&gt;
&lt;p&gt;;; para autocompletar los cierres de parentesis o de string
;;(add-hook 'python-mode-hook
;;    (lambda ()
;;      (define-key python-mode-map "\"" 'electric-pair)
;;      (define-key python-mode-map "\'" 'electric-pair)
;;      (define-key python-mode-map "(" 'electric-pair)
;;      (define-key python-mode-map "[" 'electric-pair)
;;      (define-key python-mode-map "{" 'electric-pair)))&lt;/p&gt;
&lt;p&gt;;;(defun electric-pair ()
;;  "Insert character pair without sournding spaces"
;;  (interactive)
;;  (let (parens-require-spaces)
;;    (insert-pair)))
```&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Felipe Reyes</dc:creator><pubDate>Mon, 02 Dec 2013 00:00:00 -0300</pubDate><guid isPermaLink="false">tag:tty.cl,2013-12-02:emacs.html</guid></item><item><title>erc</title><link>http://tty.cl/erc.html</link><description>&lt;p&gt;This is my configuration for erc&lt;/p&gt;
&lt;p&gt;erc-cmd-NP function send the current track being played to the current chat buffer (channel or private).&lt;/p&gt;
&lt;p&gt;The connect- functions provide a quick access to the defined IRC server.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;;;&lt;/span&gt;
&lt;span class="c1"&gt;;; erc.el&lt;/span&gt;
&lt;span class="c1"&gt;;; Login : &amp;lt;freyes@wampa&amp;gt;&lt;/span&gt;
&lt;span class="c1"&gt;;; Started on  Mon Aug 30 23:04:16 2010 Felipe Reyes&lt;/span&gt;
&lt;span class="c1"&gt;;; $Id$&lt;/span&gt;
&lt;span class="c1"&gt;;; &lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt; &lt;span class="nv"&gt;erc-cmd-NP&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&amp;amp;rest&lt;/span&gt; &lt;span class="k"&gt;ignore&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="s"&gt;&amp;quot;Display the current EMMS track to the current ERC buffer.&amp;quot;&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nb"&gt;string&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;emms-show&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;string&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;erc-send-message&lt;/span&gt; &lt;span class="nb"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;message&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Nothing is playing!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt; &lt;span class="nv"&gt;connect-freenode&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;interactive&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;erc&lt;/span&gt;
   &lt;span class="ss"&gt;:server&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;irc.freenode.net&amp;quot;&lt;/span&gt;
   &lt;span class="ss"&gt;:port&lt;/span&gt; &lt;span class="mi"&gt;6667&lt;/span&gt;
   &lt;span class="ss"&gt;:nick&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;freyes&amp;quot;&lt;/span&gt;
   &lt;span class="ss"&gt;:password&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;XXXXXX&amp;quot;&lt;/span&gt;
   &lt;span class="ss"&gt;:full-name&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Felipe Reyes&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt; &lt;span class="nv"&gt;connect-gnome&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;interactive&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;erc&lt;/span&gt;
   &lt;span class="ss"&gt;:server&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;irc.gnome.org&amp;quot;&lt;/span&gt;
   &lt;span class="ss"&gt;:port&lt;/span&gt; &lt;span class="mi"&gt;6667&lt;/span&gt;
   &lt;span class="ss"&gt;:nick&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;freyes&amp;quot;&lt;/span&gt;
   &lt;span class="ss"&gt;:password&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;XXXXX&amp;quot;&lt;/span&gt;
   &lt;span class="ss"&gt;:full-name&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Felipe Reyes&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt; &lt;span class="nv"&gt;connect-oftc&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;interactive&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;erc&lt;/span&gt;
   &lt;span class="ss"&gt;:server&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;irc.oftc.net&amp;quot;&lt;/span&gt;
   &lt;span class="ss"&gt;:port&lt;/span&gt; &lt;span class="mi"&gt;6667&lt;/span&gt;
   &lt;span class="ss"&gt;:nick&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;freyes&amp;quot;&lt;/span&gt;
   &lt;span class="ss"&gt;:password&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;XXXXXX&amp;quot;&lt;/span&gt;
   &lt;span class="ss"&gt;:full-name&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Felipe Reyes&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;erc-auto-query&lt;/span&gt; &lt;span class="ss"&gt;&amp;#39;frame&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Felipe Reyes</dc:creator><pubDate>Mon, 02 Dec 2013 00:00:00 -0300</pubDate><guid isPermaLink="false">tag:tty.cl,2013-12-02:erc.html</guid></item><item><title>Org-mode and Beamer</title><link>http://tty.cl/org-mode-and-beamer.html</link><description>&lt;h2&gt;Overview&lt;/h2&gt;
&lt;p&gt;The LaTeX class beamer allows production of high quality presentations using LaTeX and pdf processing. Org-mode has special support for turning an Org-mode file or tree into a beamer presentation. &lt;/p&gt;
&lt;h2&gt;Example&lt;/h2&gt;
&lt;p&gt;Here it is an example of how a presentation file should look like&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#+TITLE:     Org Mode and Beamer&lt;/span&gt;
&lt;span class="c1"&gt;#+AUTHOR:    Felipe Reyes&lt;/span&gt;
&lt;span class="c1"&gt;#+EMAIL:     freyes@tty.cl&lt;/span&gt;
&lt;span class="c1"&gt;#+DATE:      2011-08-25 Tue&lt;/span&gt;
&lt;span class="c1"&gt;#+DESCRIPTION:&lt;/span&gt;
&lt;span class="c1"&gt;#+KEYWORDS:  org-mode, beamer, tutorial&lt;/span&gt;
&lt;span class="c1"&gt;#+OPTIONS:   H:3 num:t toc:nil \n:nil @:t ::t |:t ^:t -:t f:t *:t &amp;lt;:t&lt;/span&gt;
&lt;span class="c1"&gt;#+OPTIONS:   TeX:t LaTeX:t skip:nil d:nil todo:t pri:nil tags:not-in-toc&lt;/span&gt;
&lt;span class="c1"&gt;#+INFOJS_OPT: view:nil toc:nil ltoc:nil mouse:underline buttons:0 path:http://orgmode.org/org-info.js&lt;/span&gt;
&lt;span class="c1"&gt;#+EXPORT_SELECT_TAGS: export&lt;/span&gt;
&lt;span class="c1"&gt;#+EXPORT_EXCLUDE_TAGS: noexport&lt;/span&gt;
&lt;span class="c1"&gt;#+LINK_UP:   &lt;/span&gt;
&lt;span class="c1"&gt;#+LINK_HOME: &lt;/span&gt;
&lt;span class="c1"&gt;#+LaTeX_CLASS: beamer&lt;/span&gt;
&lt;span class="c1"&gt;#+BEAMER_HEADER_EXTRA: \usetheme{Madrid}\usecolortheme{default}&lt;/span&gt;
&lt;span class="c1"&gt;#+MACRO: BEAMERMODE presentation&lt;/span&gt;
&lt;span class="c1"&gt;#+MACRO: BEAMERINSTITUTE tty.cl&lt;/span&gt;
&lt;span class="c1"&gt;#+BEAMER_FRAME_LEVEL: 2&lt;/span&gt;
&lt;span class="c1"&gt;#+STARTUP: beamer&lt;/span&gt;

&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;Org&lt;/span&gt; &lt;span class="n"&gt;Mode&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;Beamer&lt;/span&gt;
&lt;span class="o"&gt;**&lt;/span&gt; &lt;span class="n"&gt;Overview&lt;/span&gt;
   &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;This&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;bullet&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;
     &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;nested&lt;/span&gt; &lt;span class="n"&gt;items&lt;/span&gt;
     &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;more&lt;/span&gt; &lt;span class="n"&gt;items&lt;/span&gt;
   &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Resume&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;top&lt;/span&gt; &lt;span class="n"&gt;level&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;
&lt;span class="o"&gt;**&lt;/span&gt; &lt;span class="n"&gt;Numbered&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;
   &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;one&lt;/span&gt;
   &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;two&lt;/span&gt;
   &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;three&lt;/span&gt;
&lt;span class="o"&gt;**&lt;/span&gt; &lt;span class="n"&gt;Source&lt;/span&gt; &lt;span class="n"&gt;Code&lt;/span&gt; &lt;span class="n"&gt;Example&lt;/span&gt;
&lt;span class="c1"&gt;#+BEGIN_LaTeX&lt;/span&gt;
\&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;lstlisting&lt;/span&gt;&lt;span class="p"&gt;}[&lt;/span&gt;&lt;span class="n"&gt;language&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;my_fun&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;listdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
\&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;lstlisting&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;#+END_LaTeX&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Let's review it by section&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;First you just need to set the basic information about your presentation (title, author, email, date, description and keywords)&lt;/li&gt;
&lt;li&gt;Then you indicate if you want some extra options in each slide&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BEAMER_HEADER_EXTRA&lt;/code&gt;: include raw LaTeX statements, this is used to define the beamer's theme, in this case we are using the theme &lt;em&gt;Madrid&lt;/em&gt; with the &lt;em&gt;default&lt;/em&gt; color theme.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BEAMERMODE&lt;/code&gt;: set the presentation mode in beamer&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BEAMERINSTITUTE&lt;/code&gt;: let you define your college, business, etc.&lt;/li&gt;
&lt;li&gt;At the end we just write our slides, each level 2 section is a slide.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can open the file [[file:org-mode.beamer.presentation.org]] in emacs and use the shortcut &lt;code&gt;C-c C-e p&lt;/code&gt; to generate a pdf of the presentation. The produced pdf can be downloaded [[file:org-mode.beamer.presentation.pdf][here]]&lt;/p&gt;
&lt;h2&gt;Setup&lt;/h2&gt;
&lt;p&gt;Execute the following command in Debian or Ubuntu&lt;/p&gt;
&lt;pre&gt;
sudo apt-get install texlive-extra-utils \
    texlive-binaries \
    latex-beamer \
    texlive-latex-extra
&lt;/pre&gt;

&lt;p&gt;Add the following to your &lt;em&gt;.emacs&lt;/em&gt; file:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;;; beamer&lt;/span&gt;
&lt;span class="c1"&gt;;; #+LaTeX_CLASS: beamer in org files&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;unless&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;boundp&lt;/span&gt; &lt;span class="ss"&gt;&amp;#39;org-export-latex-classes&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;org-export-latex-classes&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;add-to-list&lt;/span&gt; &lt;span class="ss"&gt;&amp;#39;org-export-latex-classes&lt;/span&gt;
  &lt;span class="c1"&gt;;; beamer class, for presentations&lt;/span&gt;
  &lt;span class="o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;beamer&amp;quot;&lt;/span&gt;
     &lt;span class="s"&gt;&amp;quot;\\documentclass[11pt]{beamer}\n&lt;/span&gt;
&lt;span class="s"&gt;      \\mode&amp;lt;{{{beamermode}}}&amp;gt;\n&lt;/span&gt;
&lt;span class="s"&gt;      \\beamertemplateballitem\n&lt;/span&gt;
&lt;span class="s"&gt;      \\setbeameroption{show notes}&lt;/span&gt;
&lt;span class="s"&gt;      \\usepackage[utf8]{inputenc}\n&lt;/span&gt;
&lt;span class="s"&gt;      \\usepackage[T1]{fontenc}\n&lt;/span&gt;
&lt;span class="s"&gt;      \\usepackage{hyperref}\n&lt;/span&gt;
&lt;span class="s"&gt;      \\usepackage{color}&lt;/span&gt;
&lt;span class="s"&gt;      \\usepackage{listings}&lt;/span&gt;
&lt;span class="s"&gt;      \\lstset{numbers=none,language=[ISO]C++,tabsize=4,&lt;/span&gt;
&lt;span class="s"&gt;  frame=single,&lt;/span&gt;
&lt;span class="s"&gt;  basicstyle=\\small,&lt;/span&gt;
&lt;span class="s"&gt;  showspaces=false,showstringspaces=false,&lt;/span&gt;
&lt;span class="s"&gt;  showtabs=false,&lt;/span&gt;
&lt;span class="s"&gt;  keywordstyle=\\color{blue}\\bfseries,&lt;/span&gt;
&lt;span class="s"&gt;  commentstyle=\\color{red},&lt;/span&gt;
&lt;span class="s"&gt;  }\n&lt;/span&gt;
&lt;span class="s"&gt;      \\usepackage{verbatim}\n&lt;/span&gt;
&lt;span class="s"&gt;      \\institute{{{{beamerinstitute}}}}\n          &lt;/span&gt;
&lt;span class="s"&gt;       \\subject{{{{beamersubject}}}}\n&amp;quot;&lt;/span&gt;

     &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;\\section{%s}&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;\\section*{%s}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

     &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;\\begin{frame}[fragile]\\frametitle{%s}&amp;quot;&lt;/span&gt;
       &lt;span class="s"&gt;&amp;quot;\\end{frame}&amp;quot;&lt;/span&gt;
       &lt;span class="s"&gt;&amp;quot;\\begin{frame}[fragile]\\frametitle{%s}&amp;quot;&lt;/span&gt;
       &lt;span class="s"&gt;&amp;quot;\\end{frame}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;

&lt;span class="c1"&gt;;; letter class, for formal letters&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;add-to-list&lt;/span&gt; &lt;span class="ss"&gt;&amp;#39;org-export-latex-classes&lt;/span&gt;
  &lt;span class="o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;letter&amp;quot;&lt;/span&gt;
     &lt;span class="s"&gt;&amp;quot;\\documentclass[11pt]{letter}\n&lt;/span&gt;
&lt;span class="s"&gt;      \\usepackage[utf8]{inputenc}\n&lt;/span&gt;
&lt;span class="s"&gt;      \\usepackage[T1]{fontenc}\n&lt;/span&gt;
&lt;span class="s"&gt;      \\usepackage{color}&amp;quot;&lt;/span&gt;

     &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;\\section{%s}&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;\\section*{%s}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;\\subsection{%s}&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;\\subsection*{%s}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;\\subsubsection{%s}&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;\\subsubsection*{%s}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;\\paragraph{%s}&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;\\paragraph*{%s}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;\\subparagraph{%s}&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;\\subparagraph*{%s}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://bitbucket.org/rivanvx/beamer/wiki/Home"&gt;Beamer development repo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://orgmode.org/worg/org-tutorials/org-beamer/tutorial.html"&gt;Worg beamer tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://orgmode.org/manual/Beamer-class-export.html"&gt;org-mode beamer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://emacs-fu.blogspot.com/2009/10/writing-presentations-with-org-mode-and.html"&gt;emacs-fu: writing presentations with org-mode and beamer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Felipe Reyes</dc:creator><pubDate>Mon, 02 Dec 2013 00:00:00 -0300</pubDate><guid isPermaLink="false">tag:tty.cl,2013-12-02:org-mode-and-beamer.html</guid></item><item><title>Postgresql Tips n' Tricks</title><link>http://tty.cl/postgresql-tips-n-tricks.html</link><description>&lt;ul class="simple"&gt;
&lt;li&gt;pg_stat_activity&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.postgresql.org/docs/current/static/monitoring-stats.html"&gt;pg_stat_activity&lt;/a&gt;
is a view that belongs to the postgresql catalog, it helps you to view the
status of the queries that are in execution, the explanation of each column
can be found in the postgresql manual &lt;a class="reference external" href="http://www.postgresql.org/docs/current/static/monitoring-stats.html"&gt;The Statistics Collector&lt;/a&gt;
section (I don't want to do a simply copy-paste, so see the official documentation).&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="30%" /&gt;
&lt;col width="49%" /&gt;
&lt;col width="21%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;Column&lt;/th&gt;
&lt;th class="head"&gt;Type&lt;/th&gt;
&lt;th class="head"&gt;Modifiers&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;datid&lt;/td&gt;
&lt;td&gt;oid&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;datname&lt;/td&gt;
&lt;td&gt;name&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;procpid&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;usesysid&lt;/td&gt;
&lt;td&gt;oid&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;usename&lt;/td&gt;
&lt;td&gt;name&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;current_query&lt;/td&gt;
&lt;td&gt;text&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;waiting&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;xact_start&lt;/td&gt;
&lt;td&gt;timestamp with time zone&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;query_start&lt;/td&gt;
&lt;td&gt;timestamp with time zone&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;backend_start&lt;/td&gt;
&lt;td&gt;timestamp with time zone&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;client_addr&lt;/td&gt;
&lt;td&gt;inet&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;client_port&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;pg_stat_activity&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;If you want to view the queries that are stuck (usually due to a lock or simply waiting for I/O) you can execute the following query:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;pg_stat_activity&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;waiting&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Felipe Reyes</dc:creator><pubDate>Fri, 22 Nov 2013 15:23:00 -0300</pubDate><guid isPermaLink="false">tag:tty.cl,2013-11-22:postgresql-tips-n-tricks.html</guid><category>postgresql</category><category>tips</category></item><item><title>Skype in GNU/Debian AMD64</title><link>http://tty.cl/skype-in-gnudebian-amd64.html</link><description>&lt;p&gt;How to install Skype in Debian amd64&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Check if your system has i386 arch support enabled&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;$ dpkg --print-foreign-architectures
i386&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If you don't have i386 support enable it with the following commands:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h1&gt;dpkg --add-architecture i386&lt;/h1&gt;
&lt;h1&gt;apt-get update&lt;/h1&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Then install the skype's dependencies with the following command:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h1&gt;apt-get install libqtgui4:i386 \&lt;/h1&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;  libqtwebkit4:i386 \
  libqt4-network:i386 \
  libqtcore4:i386 \
  libxss1:i386 \
  lib32stdc++6 \
  libxv1:i386 \
  libasound2:i386 \
  libqt4-dbus:i386 \
  libssl1.0.0:i386 \
  libasound2-plugins:i386 \
  libqt4-xml \
  libqtcore4 \
  libqtdbus4 \
  qdbus
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;```&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;And then you are ready to install skype&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h1&gt;dpkg -i skype-debian_4.1.0.20-1_i386.deb&lt;/h1&gt;
&lt;p&gt;```&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Felipe Reyes</dc:creator><pubDate>Mon, 18 Feb 2013 04:59:00 -0300</pubDate><guid isPermaLink="false">tag:tty.cl,2013-02-18:skype-in-gnudebian-amd64.html</guid><category>debian</category><category>skype</category><category>tips</category></item><item><title>C Snippets</title><link>http://tty.cl/c-snippets.html</link><description>&lt;h2&gt;Simple Swap Function&lt;/h2&gt;
&lt;p&gt;```C&lt;/p&gt;
&lt;h1&gt;include &lt;stdio.h&gt;&lt;/h1&gt;
&lt;p&gt;inline void swap(int &lt;em&gt;a, int &lt;/em&gt;b){
  &lt;em&gt;a= &lt;/em&gt;a+&lt;em&gt;b;
  &lt;/em&gt;b=&lt;em&gt;a-&lt;/em&gt;b;
  &lt;em&gt;a=&lt;/em&gt;a-*b;
}&lt;/p&gt;
&lt;p&gt;int main() {
  int a = 1;
  int b = 2;&lt;/p&gt;
&lt;p&gt;printf("before: a: %d - b: %d\n", a, b);
  swap(&amp;amp;a, &amp;amp;b);&lt;/p&gt;
&lt;p&gt;printf("after: a: %d - b: %d\n", a, b);
  return 0;
}
```&lt;/p&gt;
&lt;p&gt;Expected output:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;before: a: 1 - b: 2
after: a: 2 - b: 1&lt;/code&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Felipe Reyes</dc:creator><pubDate>Tue, 01 Jan 2013 00:00:00 -0300</pubDate><guid isPermaLink="false">tag:tty.cl,2013-01-01:c-snippets.html</guid></item><item><title>Emacs Tips</title><link>http://tty.cl/emacs-tips.html</link><description>&lt;ul&gt;
&lt;li&gt;If you start emacs with "emacs -q" and the problem goes away, the problem is on your end: check your .emacs. &lt;/li&gt;
&lt;li&gt;If "emacs -q" has problems and "emacs -Q" does not, it's caused by your distro or local admin.&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Felipe Reyes</dc:creator><pubDate>Tue, 01 Jan 2013 00:00:00 -0300</pubDate><guid isPermaLink="false">tag:tty.cl,2013-01-01:emacs-tips.html</guid></item><item><title>Python Snippets</title><link>http://tty.cl/python-snippets.html</link><description>&lt;h2&gt;Property&lt;/h2&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;Property&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;fget&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fset&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fdel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;fdoc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__doc__&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;property&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fget&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fset&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fdel&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fdoc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Usage Example&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;TtyExample&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;

    &lt;span class="nd"&gt;@Property&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;The name&amp;quot;&lt;/span&gt;
        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;fget&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_name&lt;/span&gt;

        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;fset&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="nb"&gt;isinstance&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;basestring&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Name cannot be empty&amp;#39;&lt;/span&gt;

            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;

        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;fdel&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Hey! don&amp;#39;t delete me please :\ &amp;quot;&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;TtyExample&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;foobar&amp;#39;&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;pass&lt;/span&gt;

    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;pass&lt;/span&gt;

    &lt;span class="k"&gt;del&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Get my IP address&lt;/h2&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;socket&lt;/span&gt;

&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AF_INET&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SOCK_DGRAM&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;tty.cl&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getsockname&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Example&lt;/h3&gt;
&lt;pre&gt;
&gt;&gt;&gt; import socket
&gt;&gt;&gt; s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
&gt;&gt;&gt; s.connect(("tty.cl",80))
&gt;&gt;&gt; print s.getsockname()
('10.0.0.10', 44883)
&lt;/pre&gt;

&lt;h2&gt;Get variables&lt;/h2&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;traceback&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;StringIO&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;StringIO&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;print_exc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tb&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;    Print the usual traceback information, followed by a listing of all the&lt;/span&gt;
&lt;span class="sd"&gt;    local variables in each frame.&lt;/span&gt;

&lt;span class="sd"&gt;    :rtype StringIO.StringIO: all the traceback information&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;StringIO&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;tb&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exc_info&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;tb&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exc_info&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;tb&lt;/span&gt;

    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;tb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tb_next&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;
        &lt;span class="n"&gt;tb&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tb_next&lt;/span&gt;
    &lt;span class="n"&gt;stack&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tb_frame&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;stack&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;f_back&lt;/span&gt;
    &lt;span class="n"&gt;stack&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reverse&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Locals by frame, innermost last&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;frame&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;stack&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Frame &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt; in &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt; at line &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;f_code&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;co_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                                      &lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;f_code&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;co_filename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                                      &lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;f_lineno&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;f_locals&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
            &lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="si"&gt;%20s&lt;/span&gt;&lt;span class="s2"&gt; = &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="c1"&gt;#We have to be careful not to cause a new error in our error&lt;/span&gt;
            &lt;span class="c1"&gt;#printer! Calling str() on an unknown object could cause an&lt;/span&gt;
            &lt;span class="c1"&gt;#error we don&amp;#39;t want.&lt;/span&gt;
            &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;except&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;lt;ERROR WHILE PRINTING VALUE&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="p"&gt;:::&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;logging&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;SMSHandler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Handler&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="c1"&gt;# Inherit from logging.Handler&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;emit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;record&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;record&lt;/span&gt;
        &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pdb&lt;/span&gt;
        &lt;span class="n"&gt;pdb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_trace&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;logging.handlers&lt;/span&gt;

&lt;span class="c1"&gt;# Create a logging object (after configuring logging)&lt;/span&gt;
&lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;basicConfig&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;as&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;level&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WARNING&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;logger&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getLogger&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c1"&gt;# A little trickery because, at least for me, directly creating&lt;/span&gt;
&lt;span class="c1"&gt;# an SMSHandler object didn&amp;#39;t work&lt;/span&gt;
&lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;handlers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SMSHandler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SMSHandler&lt;/span&gt;

&lt;span class="c1"&gt;# create the handler object&lt;/span&gt;
&lt;span class="n"&gt;testHandler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;handlers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SMSHandler&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="c1"&gt;# Configure the handler to only send SMS for critical errors&lt;/span&gt;
&lt;span class="n"&gt;testHandler&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setLevel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CRITICAL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# and finally we add the handler to the logging object&lt;/span&gt;
&lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addHandler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;testHandler&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# And finally a test&lt;/span&gt;
&lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Test 1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Test 2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;warning&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Test 3&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Test 4&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;critical&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Test 5&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;json encoder/decoder&lt;/h2&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;json&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt;

&lt;span class="n"&gt;DATETIME_FORMAT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;%Y-%m-&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s2"&gt; %H:%M:%S&amp;quot;&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;JSONEncoder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;JSONEncoder&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;default&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;DATETIME_FORMAT&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;JSONEncoder&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;JSONDecoder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;JSONDecoder&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;JSONDecoder&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                  &lt;span class="n"&gt;object_hook&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;object_hook&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;object_hook&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nb"&gt;basestring&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                    &lt;span class="k"&gt;continue&lt;/span&gt;
                &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strptime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                                                          &lt;span class="n"&gt;DATETIME_FORMAT&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;ValueError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="k"&gt;pass&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;obj&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;encoder&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;JSONEncoder&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;encoder&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;date&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()})&lt;/span&gt;

    &lt;span class="n"&gt;decoder&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;JSONDecoder&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;decoder&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;encoder&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;date&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()}))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;sendmail&lt;/h2&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;smtplib&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;email.MIMEMultipart&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;MIMEMultipart&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;email.MIMEBase&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;MIMEBase&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;email.MIMEText&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;MIMEText&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;email.Utils&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;COMMASPACE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;formatdate&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;email&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Encoders&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;sendMail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;subject&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;files&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[],&lt;/span&gt;&lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;localhost&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="nb"&gt;list&lt;/span&gt;
    &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;files&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="nb"&gt;list&lt;/span&gt;
    &lt;span class="n"&gt;fro&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Expediteur &amp;lt;expediteur@mail.com&amp;gt;&amp;quot;&lt;/span&gt;

    &lt;span class="n"&gt;msg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;MIMEMultipart&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;From&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fro&lt;/span&gt;
    &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;To&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;COMMASPACE&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;formatdate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;localtime&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Subject&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;subject&lt;/span&gt;

    &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;attach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;MIMEText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;files&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;part&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;MIMEBase&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;application&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;octet-stream&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;part&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_payload&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;rb&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;Encoders&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode_base64&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;part&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;part&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Content-Disposition&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;attachment; filename=&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;&amp;quot;&amp;#39;&lt;/span&gt;
                       &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;basename&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;attach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;part&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;smtp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;smtplib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SMTP&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;smtp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sendmail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fro&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;as_string&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;smtp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;


&lt;span class="n"&gt;sendMail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;destination@dest.kio&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;hello&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;cheers&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;photo.jpg&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;memo.sxw&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Original snippet available at http://snippets.dzone.com/posts/show/757&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Felipe Reyes</dc:creator><pubDate>Tue, 01 Jan 2013 00:00:00 -0300</pubDate><guid isPermaLink="false">tag:tty.cl,2013-01-01:python-snippets.html</guid><category>python</category><category>snippets</category></item><item><title>Mercurial</title><link>http://tty.cl/mercurial.html</link><description>&lt;p&gt;This is my mercurial configuration (~/.hgrc)&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;[ui]&lt;/span&gt;
&lt;span class="na"&gt;username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;Foo Bar &amp;lt;foobar@example.com&amp;gt;&lt;/span&gt;
&lt;span class="na"&gt;merge&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;emacs&lt;/span&gt;

&lt;span class="k"&gt;[extensions]&lt;/span&gt;
&lt;span class="na"&gt;pager&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
&lt;span class="na"&gt;rebase&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 
&lt;span class="na"&gt;churn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
&lt;span class="na"&gt;hgshelve&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;~/.hg.d/hgshelve.py&lt;/span&gt;
&lt;span class="na"&gt;keyword&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
&lt;span class="na"&gt;fetch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
&lt;span class="na"&gt;activity&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;~/.hg.d/hgactivity/activity.py&lt;/span&gt;
&lt;span class="na"&gt;mq&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
&lt;span class="na"&gt;hg_histedit&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;~/.hg.d/hg_histedit.py&lt;/span&gt;
&lt;span class="na"&gt;color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;

&lt;span class="k"&gt;[diff]&lt;/span&gt;
&lt;span class="na"&gt;git&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;on&lt;/span&gt;

&lt;span class="k"&gt;[pager]&lt;/span&gt;
&lt;span class="na"&gt;pager&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;LESS=&amp;#39;FSRX&amp;#39; less&lt;/span&gt;
&lt;span class="na"&gt;attend&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;glog&lt;/span&gt;

&lt;span class="k"&gt;[keywordmaps]&lt;/span&gt;
&lt;span class="na"&gt;Author&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;{author|user}&lt;/span&gt;
&lt;span class="na"&gt;Date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;{date|utcdate}&lt;/span&gt;
&lt;span class="na"&gt;Header&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;{file},v {node|short} {date|utcdate} {author|user}&lt;/span&gt;
&lt;span class="na"&gt;Id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;{file|basename},v {node|short} {date|utcdate} {author|user}&lt;/span&gt;
&lt;span class="na"&gt;RCSFile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;{file|basename},v&lt;/span&gt;
&lt;span class="na"&gt;RCSfile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;{file|basename},v&lt;/span&gt;
&lt;span class="na"&gt;Revision&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;{node|short}&lt;/span&gt;
&lt;span class="na"&gt;Source&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;{root}/{file},v&lt;/span&gt;

&lt;span class="k"&gt;[web]&lt;/span&gt;
&lt;span class="na"&gt;cacerts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;/etc/ssl/certs/ca-certificates.crt&lt;/span&gt;

&lt;span class="k"&gt;[alias]&lt;/span&gt;
&lt;span class="na"&gt;sst&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;!hg status $($HG root) $HG_ARGS&lt;/span&gt;

&lt;span class="k"&gt;[merge-tools]&lt;/span&gt;
&lt;span class="na"&gt;emacs.args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;-q --eval &amp;quot;(ediff-merge-with-ancestor \&amp;quot;$local\&amp;quot; \&amp;quot;$other\&amp;quot; \&amp;quot;$base\&amp;quot; nil \&amp;quot;$output\&amp;quot;)&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Felipe Reyes</dc:creator><pubDate>Mon, 03 Dec 2012 17:42:08 -0300</pubDate><guid isPermaLink="false">tag:tty.cl,2012-12-03:mercurial.html</guid><category>mercurial</category><category>vcs</category></item><item><title>rxvt-unicode</title><link>http://tty.cl/rxvt-unicode.html</link><description>&lt;p&gt;The Rxvt terminal is a really good terminal emulator, actually it has been my
default terminal since at least 4 years ago. I started using it after getting
 tired of gnome-terminal (it's too fat and heavy for me).&lt;/p&gt;
&lt;p&gt;&lt;img alt="Screenshot" src="http://tty.cl/images/urxvt_shot.20110601.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;To install it you just must do the follow:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;aptitude install rxvt-unicode&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If you want to use it as your default x-terminal-emulator you have to
set the proper alternative like this&lt;/p&gt;
&lt;p&gt;&lt;code&gt;update-alternatives --set x-terminal-emulator /usr/bin/urxvt&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The configuration must go on your ~/.Xdefaults file, here is my configuration&lt;/p&gt;
&lt;p&gt;&lt;code&gt;URxvt.foreground: grey90
URxvt.cursorColor: #729fcf
URxvt.font: -xos4-terminus-medium-r-normal--14-140-72-72-c-80-iso8859-15
URxvt.scrollBar: False
URxvt.shading: 50
URxvt.transparent: True
URxvt.fade: 80
URxvt.fadeColor: #e9b96e
URxvt.tintColor: #5c5c5c
URxvt*urgentOnBell: true
URxvt*urllauncher: iceweasel
URxvt*matcher.button:        3
URxvt*depth: 24
URxvt*background: rgba:0000/0000/0000/dddd&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Once you put the configuration you can reload it using this&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
xrdb -merge ~/.Xdefaults&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Remember to install the terminus fonts if you want to use my configuration&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
aptitude install xfonts-terminus xfonts-terminus-dos xfonts-terminus-oblique&lt;/code&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Felipe Reyes</dc:creator><pubDate>Sat, 11 Jun 2011 23:10:00 -0400</pubDate><guid isPermaLink="false">tag:tty.cl,2011-06-11:rxvt-unicode.html</guid><category>debian</category><category>linux</category><category>tips</category><category>rxvt</category></item><item><title>About Me</title><link>http://tty.cl/about-me.html</link><description>&lt;p&gt;A Software Engineer, Debian enthusiast, free and open source software
developer (or at least I try)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.flickr.com/photos/freyes"&gt;Flickr&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.linkedin.com/in/freyesas"&gt;Linkedin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ohloh.net/accounts/freyes"&gt;Ohloh&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Yeah, that's me." src="/images/freyes.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.fsf.org/register_form?referrer=9394"&gt;&lt;img src="/images/freyes-fsf-member.png" alt="[FSF Associate Member]" width="88" height="31" /&gt;&lt;/a&gt; Proud FSF associate member :)&lt;/p&gt;
&lt;h2&gt;GNU/Linux Distributions Used&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;RedHat (6.0, 6.2, 7.3)&lt;/li&gt;
&lt;li&gt;Slackware (unknown version)&lt;/li&gt;
&lt;li&gt;Suse (unknown version)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.debian.org"&gt;Debian&lt;/a&gt; &lt;a href="http://www.debian.org/releases/woody/"&gt;Woody&lt;/a&gt;, &lt;a href="http://www.debian.org/releases/sarge"&gt;Sarge&lt;/a&gt;, &lt;a href="http://www.debian.org/releases/etch/"&gt;Etch&lt;/a&gt;, &lt;a href="http://www.debian.org/releases/lenny/"&gt;Lenny&lt;/a&gt;, &lt;a href="http://www.debian.org/releases/squeeze"&gt;Squeeze&lt;/a&gt;, &lt;a href="http://www.debian.org/releases/unstable"&gt;Sid&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.ubuntu.com"&gt;Ubuntu&lt;/a&gt; (4.10, 5.04, 5.10, 6.04, 8.04, 8.10, etc.)&lt;/li&gt;
&lt;li&gt;CentOS (5.x)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Specific Skills&lt;/h2&gt;
&lt;h3&gt;Programming Languages&lt;/h3&gt;
&lt;p&gt;These are all the languages that at some point I've used, some of them
I don't even remember them :).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://en.wikipeida.org/wiki/C_(programming_language)"&gt;C&lt;/a&gt;, the father of all the languages :)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/Python_%28programming_language%29"&gt;Python&lt;/a&gt;, excelent high level scripting language&lt;/li&gt;
&lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/Pascal_%28programming_language%29"&gt;Pascal&lt;/a&gt;, a nice language to learn&lt;/li&gt;
&lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/Perl_%28programming_language%29"&gt;Perl&lt;/a&gt; a really good scripting language for file processing&lt;/li&gt;
&lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/PL/pgSQL"&gt;Pl/pgSQL&lt;/a&gt; the procedural programming language of PostgreSQL&lt;/li&gt;
&lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/Java_%28programming_language%29"&gt;Java&lt;/a&gt;, I've done just the basics with this one, only the neccessary to maintain a webapp&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Cloud&lt;/h3&gt;
&lt;p&gt;I've worked heavily with &lt;a href="https://aws.amazon.com/"&gt;Amazon Web Services&lt;/a&gt; technologies, specially with the following services:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;EC2&lt;/li&gt;
&lt;li&gt;S3&lt;/li&gt;
&lt;li&gt;RDS (mysql)&lt;/li&gt;
&lt;li&gt;CloudWatch to gather stats about my compute cluster instances and post processing it to analyze CPU usage.&lt;/li&gt;
&lt;li&gt;CloudFormation to deploy a complete stack using EC2, Route53, RDS and other services.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Also I've submitted patches to &lt;a href="http://openstack.org/"&gt;OpenStack&lt;/a&gt;, specifically to &lt;a href="https://github.com/openstack/swift"&gt;Swift&lt;/a&gt;
and &lt;a href="https://github.com/openstack-infra/jenkins-job-builder/"&gt;jenkins-job-builder&lt;/a&gt;, you can see
&lt;a href="https://review.openstack.org/#/dashboard/2424"&gt;my list of contributions in Gerrit&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Web&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/PHP_%28programming_language%29"&gt;PHP&lt;/a&gt; a simple language for basic websites&lt;/li&gt;
&lt;li&gt;Javascript (jquery, mochikit, Emberjs)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/Actionscript"&gt;ActionScript&lt;/a&gt; and &lt;a href="http://en.wikipedia.org/wiki/Adobe_Flex"&gt;Adobe Flex&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Frameworks (libraries)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.djangoproject.com/"&gt;Django&lt;/a&gt; is a high-level Python Web framework
  that encourages rapid development and clean, pragmatic design.&lt;/li&gt;
&lt;li&gt;PyGTK and its friends (cairo, pango, glib, ...)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://bottlepy.org"&gt;Bottle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://flask.pocoo.org"&gt;Flask&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://jinja.pocoo.org/"&gt;Jinja2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;System Administration&lt;/h2&gt;
&lt;p&gt;Several years administrating GNU/Linux based servers (physical and virtual machines) for fun and profit.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Debian&lt;/li&gt;
&lt;li&gt;Ubuntu&lt;/li&gt;
&lt;li&gt;CentOS&lt;/li&gt;
&lt;li&gt;OpenWRT&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Services&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Mail (postfix, dovecot)&lt;/li&gt;
&lt;li&gt;Web (apache)&lt;/li&gt;
&lt;li&gt;Firewall (homebrew iptables rules, shorewall)&lt;/li&gt;
&lt;li&gt;Routers&lt;/li&gt;
&lt;li&gt;Etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Others&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Xen based virtualization&lt;/li&gt;
&lt;li&gt;Databases: &lt;a href="http://www.mysql.org"&gt;MySQL&lt;/a&gt;, &lt;a href="http://www.postgresql.org"&gt;PostgreSQL&lt;/a&gt;, &lt;a href="http://www.oracle.com"&gt;Oracle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.rabbitmq.com"&gt;RabbitMQ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://celeryproject.org/"&gt;Celery&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Felipe Reyes</dc:creator><pubDate>Sun, 10 Oct 2010 00:00:00 -0400</pubDate><guid isPermaLink="false">tag:tty.cl,2010-10-10:about-me.html</guid></item></channel></rss>